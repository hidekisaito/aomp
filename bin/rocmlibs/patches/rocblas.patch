diff --git a/CMakeLists.txt b/CMakeLists.txt
index f70de1cf..5eedfcc3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -112,7 +112,7 @@ if (NOT BUILD_ADDRESS_SANITIZER)
   set( TARGET_LIST_ROCM_5.6 "gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack+;gfx90a:xnack-;gfx1010;gfx1012;gfx1030;gfx1100;gfx1101;gfx1102")
   set( TARGET_LIST_ROCM_5.7 "gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack+;gfx90a:xnack-;gfx940;gfx941;gfx942;gfx1010;gfx1012;gfx1030;gfx1100;gfx1101;gfx1102")
   set( TARGET_LIST_ROCM_6.0 "gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack+;gfx90a:xnack-;gfx940;gfx941;gfx942;gfx1010;gfx1012;gfx1030;gfx1100;gfx1101;gfx1102")
-  set( TARGET_LIST_ROCM_6.3 "gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a;gfx940;gfx941;gfx942;gfx1010;gfx1012;gfx1030;gfx1100;gfx1101;gfx1102;gfx1151;gfx1200;gfx1201")
+  set( TARGET_LIST_ROCM_6.3 "gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a;gfx940;gfx941;gfx942;gfx1010;gfx1012;gfx1030;gfx1100;gfx1101;gfx1102;gfx1151;gfx1200;gfx1201;gfx1103;gfx90c")
 else()
   set( TARGET_LIST_ROCM_5.6 "gfx908:xnack+;gfx90a:xnack+")
   set( TARGET_LIST_ROCM_5.7 "gfx908:xnack+;gfx90a:xnack+;gfx942:xnack+")
diff --git a/library/src/handle.cpp b/library/src/handle.cpp
index ea1fa1a7..cb14874c 100644
--- a/library/src/handle.cpp
+++ b/library/src/handle.cpp
@@ -106,6 +106,10 @@ static Processor getActiveArch(int deviceId)
     {
         return Processor::gfx90a;
     }
+    else if(deviceString.find("gfx90c") != std::string::npos)
+    {
+        return Processor::gfx90c;
+    }
     else if(deviceString.find("gfx940") != std::string::npos)
     {
         return Processor::gfx940;
@@ -146,6 +150,10 @@ static Processor getActiveArch(int deviceId)
     {
         return Processor::gfx1102;
     }
+    else if(deviceString.find("gfx1103") != std::string::npos)
+    {
+        return Processor::gfx1103;
+    }
     else if(deviceString.find("gfx1151") != std::string::npos)
     {
         return Processor::gfx1151;
diff --git a/library/src/include/handle.hpp b/library/src/include/handle.hpp
index 94d18c7b..c47cefe8 100644
--- a/library/src/include/handle.hpp
+++ b/library/src/include/handle.hpp
@@ -82,6 +82,7 @@ enum class Processor : int
     gfx906  = 906,
     gfx908  = 908,
     gfx90a  = 910,
+    gfx90c  = 912,
     gfx940  = 940,
     gfx941  = 941,
     gfx942  = 942,
@@ -96,6 +97,7 @@ enum class Processor : int
     gfx1100 = 1100,
     gfx1101 = 1101,
     gfx1102 = 1102,
+    gfx1103 = 1103,
     gfx1151 = 1151,
     gfx1200 = 1200,
     gfx1201 = 1201
diff --git a/library/src/tensile_host.cpp b/library/src/tensile_host.cpp
index f7d4bdb1..47d69c0d 100644
--- a/library/src/tensile_host.cpp
+++ b/library/src/tensile_host.cpp
@@ -271,6 +271,10 @@ namespace
         {
             return Tensile::LazyLoadingInit::gfx90a;
         }
+        else if(deviceString.find("gfx90c") != std::string::npos)
+        {
+            return Tensile::LazyLoadingInit::gfx90c;
+        }
         else if(deviceString.find("gfx940") != std::string::npos)
         {
             return Tensile::LazyLoadingInit::gfx940;
@@ -311,6 +315,10 @@ namespace
         {
             return Tensile::LazyLoadingInit::gfx1102;
         }
+        else if(deviceString.find("gfx1103") != std::string::npos)
+        {
+            return Tensile::LazyLoadingInit::gfx1103;
+        }
         return Tensile::LazyLoadingInit::None;
     }
 
